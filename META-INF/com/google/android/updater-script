#--INFORMATION
ui_print("********************************************");
ui_print("* Installing WilNeoLitic ROM");
ui_print("********************************************");
set_progress(0.05);

#--PREPARE DEVICE PARTITIONS
ui_print("-- Preparing device partitions");
ifelse(is_mounted("/system") == "/system", unmount("/system"));
ifelse(is_mounted("/cache") == "/cache", unmount("/cache"));
ifelse(is_mounted("/data") == "/data", unmount("/data"));

run_program("/sbin/sh", "-c", "mount -t ext4 -o rw /dev/block/platform/13540000.dwmmc0/by-name/SYSTEM /system");
run_program("/sbin/sh", "-c", "mount -t ext4 -o rw /dev/block/platform/13540000.dwmmc0/by-name/USERDATA /data");
run_program("/sbin/sh", "-c", "mount -t ext4 -o rw /dev/block/platform/13540000.dwmmc0/by-name/CACHE /cache");

#--FIRMWARE FLASH
set_progress(0.10);
	package_extract_dir("sinstall", "/tmp");

		if file_getprop("/tmp/aroma-data/firm.prop", "selected.1") == "1" then
			ui_print("-- Flashing stock kernel");
			package_extract_dir("tools/firm/kernel", "/tmp");
			set_perm(0, 0, 0777, "/tmp/flash_kernel.sh");
			run_program("/sbin/busybox", "sh", "/tmp/flash_kernel.sh");
		else
			ui_print("-- Do not flash kernel");
		endif;

		if file_getprop("/tmp/aroma-data/firm.prop", "selected.2") == "1" then
			ui_print("-- Flashing stock modem");
			package_extract_file("tools/firm/modem/modem.bin", "/dev/block/platform/13540000.dwmmc0/by-name/RADIO");
		else
			ui_print("-- Do not flash modem");
		endif;

#--WIPE OPTIONS
set_progress(0.20);

	delete_recursive("/cache");
	delete_recursive("/system");

	if
		file_getprop("/tmp/aroma-data/wipe.prop", "item.1.1") == "1"
	then
		ui_print("-- Wiping Data without Internal Storage");
		set_perm(0, 0, 0777, "/tmp/DeleteDataWithoutMedia.sh");
		run_program("/sbin/busybox", "sh", "/tmp/DeleteDataWithoutMedia.sh");
		delete_recursive("/sdcard/.android/.secure");
		delete_recursive("/sdcard/.data");
		delete_recursive("/sdcard/.face");
		delete_recursive("/sdcard/bugreports");
		delete_recursive("/sdcard/LOST.DIR");
		delete_recursive("/sdcard/tmp");
		delete_recursive("/sdcard/vrtheme-backup");
		delete_recursive("/sdcard/vrtheme");
		delete_recursive("/sdcard/Android/data/com.sec.android.app.launcher.cache");
		delete_recursive("/sdcard/.dataycache");
		delete_recursive("/sdcard/.toolscache");
		delete_recursive("/sdcard/Android/data/com.android.providers.media");
		delete_recursive("/sdcard/Android/data/com.google.android.apps.maps");
	endif;

#--MAIN SYSTEM
set_progress(0.25);
	ui_print("-- Extracting system & data");
	package_extract_dir("system", "/system");
set_progress(0.28);
	package_extract_dir("data", "/data");
	delete_recursive("/data/tweakslog");
	package_extract_dir("tools/scripts/tweakslog/", "/data/tweakslog");
	set_perm_recursive(0, 0, 0755, 0755, "/data/tweakslog");
	package_extract_dir("tools/scripts/system/gen/etc", "/system/etc");
	package_extract_dir("tools/scripts/system/gen/su.d/", "/system/su.d");
	package_extract_dir("tools/scripts/system/gen/xbin/", "/system/xbin");
	set_metadata_recursive("/data/app/com.sec.android.app.camera.shootingmode.beauty-1", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:apk_data_file:s0");
	set_metadata_recursive("/data/app/com.sec.android.app.camera.shootingmode.sports-1", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:apk_data_file:s0");
	set_metadata_recursive("/data/app/com.sonyericsson.digitalclockwidget2-1", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:apk_data_file:s0");
	set_metadata_recursive("/data/app/com.nema.batterycalibration-1", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:apk_data_file:s0");
	set_metadata_recursive("/data/app/simple.reboot.com-1", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:apk_data_file:s0");

#--SYS OP

	#--BUILDPROP

		if 
			file_getprop("/tmp/aroma/build.prop", "selected.1") == "1"
		then
			ui_print("-- Optimizing Build.prop");
			package_extract_dir("tools/tweaks/", "/sdcard/tmp");
			set_metadata("/sdcard/tmp/tweaks.sh", "uid", 0, "gid", 2000, "mode", 0777, "capabilities", 0x0, "selabel", "u:object_r:tweaks_sh_file:s0");
			run_program("/sdcard/tmp/tweaks.sh");
		else
			ui_print("-- You choose to not optimize Build.prop");
		endif;
	
	#--BOOTSCRIPT
	set_progress(0.30);
	
		if 
			file_getprop("/tmp/aroma-data/boot.prop", "selected.1") == "1"
		then
			ui_print("-- Installing Boot Scripts");
		else
			ui_print("-- You choose to not install Boot Scripts");
		endif;
		
		if 
			file_getprop("/tmp/aroma-data/bootscript.prop", "item.1.1") == "1"
		then
			ui_print("-- Installing File Trimming script");
			package_extract_dir("tools/scripts/system/bootfs/", "/system");
		else
			ui_print("-- You choose to not install File Trimming script");
		endif;

		if 
			file_getprop("/tmp/aroma-data/bootscript.prop", "item.1.2") == "1"
		then
			ui_print("-- Installing Better Scrolling script");
			package_extract_dir("tools/scripts/system/bootbs/", "/system");
		else
			ui_print("-- You choose to not install Better Scrolling script");
		endif;

		if 
			file_getprop("/tmp/aroma-data/bootscript.prop", "item.1.3") == "1"
		then
			ui_print("-- Installing Wifi Sleeping script");
			package_extract_dir("tools/scripts/system/bootws/", "/system");
		else
			ui_print("-- You choose to not install Wifi Sleeping script");
		endif;
		
		if 
			file_getprop("/tmp/aroma-data/bootscript.prop", "item.1.4") == "1"
		then
			ui_print("-- Installing SD R/W Tweaks script");
			package_extract_dir("tools/scripts/system/bootsd/", "/system");
		else
			ui_print("-- You choose to not install SD R/W Tweaks");
		endif;
		
		if 
			file_getprop("/tmp/aroma-data/bootscript.prop", "item.1.5") == "1"
		then
			ui_print("-- Installing CPU Optimizing script");
			package_extract_dir("tools/scripts/system/bootcp/", "/system");
			else
			ui_print("-- You choose to not install CPU Optimizing script");
		endif;

#--CROND
set_progress(0.35);	
	if 
		file_getprop("/tmp/aroma-data/crond.prop", "selected.1") == "1"
	then
		ui_print("-- Installing Cron.d");
		delete_recursive("/data/cronlog");
		package_extract_dir("tools/cron.d/log/", "/data/cronlog");
		package_extract_dir("tools/cron.d/system/", "/system");
		set_perm_recursive(0, 0, 0755, 0755, "/data/cronlog");
	else
		ui_print("-- You choose to not install Cron.d");
	endif;
	
	if 
		file_getprop("/tmp/aroma-data/cronscript.prop", "item.1.1") == "1"
	then
		ui_print("-- Installing Auto File Trimming script");
		package_extract_dir("tools/cron.d/systemfs/system/xbin", "/system/xbin");
		package_extract_dir("tools/scripts/system/bootfs/xbin/", "/system/xbin");
		package_extract_dir("tools/cron.d/systemfs/tweaks/", "/sdcard/tmp");
		set_metadata("/sdcard/tmp/tweaksfs.sh", "uid", 0, "gid", 2000, "mode", 0777, "capabilities", 0x0, "selabel", "u:object_r:tweaks_sh_file:s0");
		run_program("/sdcard/tmp/tweaksfs.sh");
	else
		ui_print("-- You choose to not install Auto File Trimming script");
	endif;

	if 
		file_getprop("/tmp/aroma-data/cronscript.prop", "item.1.2") == "1"
	then
		ui_print("-- Installing Auto File Cleaning script");
		package_extract_dir("tools/cron.d/systemclean/system/xbin", "/system/xbin");
		package_extract_dir("tools/cron.d/systemclean/tweaks/", "/sdcard/tmp");
		set_metadata("/sdcard/tmp/tweaksclean.sh", "uid", 0, "gid", 2000, "mode", 0777, "capabilities", 0x0, "selabel", "u:object_r:tweaks_sh_file:s0");
		run_program("/sdcard/tmp/tweaksclean.sh");
	else
		ui_print("-- You choose to not install Auto File Cleaning script");
	endif;

	if 
		file_getprop("/tmp/aroma-data/cronscript.prop", "item.1.3") == "1"
	then
		ui_print("-- Installing Auto DB Optimize script");
		package_extract_dir("tools/scripts/system/bootws/xbin/", "/system/xbin");
		package_extract_dir("tools/cron.d/systemsql/system/xbin", "/system/xbin");
		package_extract_dir("tools/cron.d/systemsql/tweaks/", "/sdcard/tmp");
		set_metadata("/sdcard/tmp/tweaksql.sh", "uid", 0, "gid", 2000, "mode", 0777, "capabilities", 0x0, "selabel", "u:object_r:tweaks_sh_file:s0");
		run_program("/sdcard/tmp/tweaksql.sh");
	else
		ui_print("-- You choose to not install Auto DB Optimize script");
	endif;

#--LAUNCHER
set_progress(0.40);
ui_print("-- Installing Launcher");
	if
		file_getprop("/tmp/aroma/nova.prop", "selected.1") == "1"
	then
		ui_print("-- You choose to use Touchwiz Launcher");
	endif;
	if
		file_getprop("/tmp/aroma/nova.prop", "selected.1") == "2"
	then
		ui_print("-- Installing Nova only");
		package_extract_dir("tools/launcher/launcher", "/system/app");
		package_extract_dir("tools/launcher/menu", "/data/app");
		set_metadata_recursive("/data/app/gauravmantri.theme.n5-1", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:apk_data_file:s0");
		package_extract_dir("tools/sdcard/", "/sdcard");
		delete_recursive("/system/app/FlipboardBriefing");
		delete_recursive("/system/app/EmergencyLauncher");
		delete_recursive("/system/priv-app/EasyLauncher2_Zero");
		delete_recursive("/system/priv-app/ThemeCenter");
		delete_recursive("/system/priv-app/ThemeStore_3xh");
		delete_recursive("/system/priv-app/TouchWizHome_2016");
	endif;
	if
		file_getprop("/tmp/aroma/nova.prop", "selected.1") == "3"
	then
		ui_print("-- Installing Nova with Touchwiz");
		package_extract_dir("tools/launcher/launcher", "/system/app");
		package_extract_dir("tools/launcher/menu", "/data/app");
		set_metadata_recursive("/data/app/gauravmantri.theme.n5-1", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:apk_data_file:s0");
		package_extract_dir("tools/sdcard/", "/sdcard");
	endif;

#--SMS
ui_print("-- Installing SMS Application");
	if
		file_getprop("/tmp/aroma/sms.prop", "selected.1") == "1"
	then
		ui_print("-- You choose to use Stock SMS");
	endif;
	if
		file_getprop("/tmp/aroma/sms.prop", "selected.1") == "2"
	then
		ui_print("-- Installing Stock Modded SMS");
		package_extract_dir("tools/smsmms/mmsmod", "/system/priv-app");
	endif;
	if
		file_getprop("/tmp/aroma/sms.prop", "selected.1") == "3"
	then
		ui_print("-- Installing Chomp SMS");
		package_extract_dir("tools/smsmms/chomp", "/system/app");
		delete_recursive("/system/priv-app/SecMms_Epic_Common")
	endif;
	if
		file_getprop("/tmp/aroma/sms.prop", "selected.1") == "4"
	then
		ui_print("-- Installing Signal Private Messenger");
		package_extract_dir("tools/smsmms/signal", "/system/app");
		delete_recursive("/system/priv-app/SecMms_Epic_Common")
	endif;
	
#--ADBLOCK
ui_print("-- Installing AD Block");
	if
		file_getprop("/tmp/aroma/ad.prop", "selected.1") == "1"
	then
		ui_print("-- AD Block is enabled");
		package_extract_dir("tools/adblock/", "/system");
	endif;
	if
		file_getprop("/tmp/aroma/ad.prop", "selected.1") == "2"
	then
		ui_print("-- ADs are enabled");
	endif;
	
#--BOOTANIM
ui_print("-- Installing Boot Animation");
	if
		file_getprop("/tmp/aroma/bootanim.prop", "selected.1") == "1"
	then
		package_extract_dir("tools/bootanim/AeNomolyll/", "/system");
	endif;
	if
		file_getprop("/tmp/aroma/bootanim.prop", "selected.1") == "2"
	then
		package_extract_dir("tools/bootanim/AndroidM/", "/system");
	endif;
	if
		file_getprop("/tmp/aroma/bootanim.prop", "selected.1") == "3"
	then
		package_extract_dir("tools/bootanim/Apple/", "/system");
	endif;
	if
		file_getprop("/tmp/aroma/bootanim.prop", "selected.1") == "4"
	then
		package_extract_dir("tools/bootanim/N7B/", "/system");
	endif;
	if
		file_getprop("/tmp/aroma/bootanim.prop", "selected.1") == "5"
	then
		package_extract_dir("tools/bootanim/N7W/", "/system");
	endif;
	if
		file_getprop("/tmp/aroma/bootanim.prop", "selected.1") == "6"
	then
		ui_print("-- Stock Boot Animation installed");
	endif;
	
#--BRAVIA
ui_print("-- Installing Sony Engine V4");
	if
		file_getprop("/tmp/aroma/sony.prop", "selected.1") == "1"
	then
		ui_print("-- Sony Engine installed");
		delete("/system/app/ImageEnhancer.apk");
		delete("/system/app/ImageProcessorPermission.apk");
		delete("/system/app/SwiqiMasterReset.apk");
		delete("/system/app/SwiqiSettingsService.apk");
		delete("/system/etc/bin/be_movie");
		delete("/system/etc/bin/be_movie_spc");
		delete("/system/etc/bin/sony_z3_imageenhancer");
		delete("/system/etc/bin/sony_z5_imageenhancer");
		delete("/system/etc/int.d/BXVengine");
		delete("/system/etc/be_album");
		delete("/system/etc/be_movie");
		delete("/system/etc/be_movie_setting");
		delete("/system/etc/be_movie_spc");
		delete("/system/etc/be_photo");
		delete("/system/etc/be2_album");
		delete("/system/etc/be2_album_mapping");
		delete("/system/etc/be2_album01");
		delete("/system/etc/be2_album02");
		delete("/system/etc/BraviaPermission.sh");
		delete("/system/etc/permissions/com.sonyericsson.android.SwIqiBmp.xml");
		delete("/system/etc/permissions/com.sonyericsson.colorextraction.xml");
		delete("/system/etc/permissions/com.sonyericsson.uxp.xml");
		delete("/system/etc/permissions/com.sonyericsson.uxpres.xml");
		delete("/system/etc/permissions/com.sonymobile.imageenhancer.xml");
		delete("/system/etc/permissions/com.sonymobile.imageprocessor.xml");
		delete("/system/etc/permissions/com.sonymobile.photoanalyzer.xml");
		run_program("/sbin/busybox","mv","-f","/system/bin/qrngd.bak","/system/bin/qrngd");
		run_program("/sbin/busybox","mv","-f","/system/xbin/qrngd.bak","/system/xbin/qrngd");
		delete("/system/xbin/haveged");
		package_extract_dir("tools/sony/system", "/system");
	endif;
	if
		file_getprop("/tmp/aroma/sony.prop", "selected.1") == "2"
	then
		ui_print("-- Sony Engine not installed");
	endif;

#--CSC
set_progress(0.60);

	# NOCSC
	if
		file_getprop("/tmp/aroma/csc.prop","CSC") == "None"
	then
		ui_print("@  No CSC");
	endif;
	
	# BTU
	if
		file_getprop("/tmp/aroma/csc.prop","CSC") == "BTU"
	then
		ui_print("@  BTU CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/BTU", "/system");
	endif;
	
	# CYV
	if
		file_getprop("/tmp/aroma/csc.prop","CSC") == "CYV"
	then
		ui_print("@  CYV CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/CYV", "/system");
	endif;
	
	# DBT
	if
		file_getprop("/tmp/aroma/csc.prop","CSC") == "DBT"
	then
		ui_print("@  DBT CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/DBT", "/system");
	endif;

	# ITV
	if
		file_getprop("/tmp/aroma/csc.prop","CSC") == "ITV"
	then
		ui_print("@  ITV CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/ITV", "/system");
	endif;
	
	# MET
	if
		file_getprop("/tmp/aroma/csc.prop","CSC") == "MET"
	then
		ui_print("@  MET CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/MET", "/system");
	endif;
	
	# PRO
	if
		file_getprop("/tmp/aroma/csc.prop","CSC") == "PRO"
	then
		ui_print("@  PRO CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/PRO", "/system");
	endif;
	
	# ROM
	if
		file_getprop("/tmp/aroma/csc.prop","CSC") == "ROM"
	then
		ui_print("@  ROM CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/ROM", "/system");
	endif;
	
	# SEE
	if
		file_getprop("/tmp/aroma/csc.prop","CSC") == "SEE"
	then
		ui_print("@  SEE CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/SEE", "/system");
	endif;
	
	# TPH
	if
		file_getprop("/tmp/aroma/csc.prop","CSC") == "TPH"
	then
		ui_print("@  TPH CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/TPH", "/system");
	endif;
	
	# TWO
	if
		file_getprop("/tmp/aroma/csc.prop","selected.1") == "TWO"
	then
		ui_print("@  TWO CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/TWO", "/system");
	endif;
	
	# VGR
	if
		file_getprop("/tmp/aroma/csc.prop","selected.1") == "VGR"
	then
		ui_print("@  VGR CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/VGR", "/system");
	endif;
	
	# XEF
	if
		file_getprop("/tmp/aroma/csc.prop","selected.1") == "XEF"
	then
		ui_print("@  XEF CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/XEF", "/system");
	endif;
	
	# XEH
	if
		file_getprop("/tmp/aroma/csc.prop","selected.1") == "XEH"
	then
		ui_print("@  XEH CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/XEH", "/system");
	endif;
	
	# XEO
	if
		file_getprop("/tmp/aroma/csc.prop","selected.1") == "XEO"
	then
		ui_print("@  XEO CSC");
		package_extract_dir("tools/csc/gen", "/system");
		package_extract_dir("tools/csc/csc/XEO", "/system");
	endif;

#--SYMLINKS
ui_print("-- Creating symbolic links");
set_progress(0.65);
symlink("toolbox", "/system/bin/cat");
symlink("toolbox", "/system/bin/chcon");
symlink("toolbox", "/system/bin/chmod");
symlink("toolbox", "/system/bin/chown");
symlink("toolbox", "/system/bin/clear");
symlink("toolbox", "/system/bin/cp");
symlink("toolbox", "/system/bin/date");
symlink("toolbox", "/system/bin/dd");
symlink("toolbox", "/system/bin/df");
symlink("toolbox", "/system/bin/dmesg");
symlink("toolbox", "/system/bin/du");
symlink("toolbox", "/system/bin/getenforce");
symlink("toolbox", "/system/bin/getevent");
symlink("toolbox", "/system/bin/getprop");
symlink("toolbox", "/system/bin/grep");
symlink("toolbox", "/system/bin/id");
symlink("toolbox", "/system/bin/ifconfig");
symlink("toolbox", "/system/bin/iftop");
symlink("toolbox", "/system/bin/insmod");
symlink("toolbox", "/system/bin/ioctl");
symlink("toolbox", "/system/bin/ionice");
symlink("toolbox", "/system/bin/kill");
symlink("toolbox", "/system/bin/ln");
symlink("toolbox", "/system/bin/load_policy");
symlink("toolbox", "/system/bin/log");
symlink("toolbox", "/system/bin/ls");
symlink("toolbox", "/system/bin/lsmod");
symlink("toolbox", "/system/bin/lsof");
symlink("toolbox", "/system/bin/mkdir");
symlink("toolbox", "/system/bin/mknod");
symlink("toolbox", "/system/bin/mkswap");
symlink("toolbox", "/system/bin/mount");
symlink("toolbox", "/system/bin/mv");
symlink("toolbox", "/system/bin/nandread");
symlink("toolbox", "/system/bin/netstat");
symlink("toolbox", "/system/bin/newfs_msdos");
symlink("toolbox", "/system/bin/nohup");
symlink("toolbox", "/system/bin/printenv");
symlink("toolbox", "/system/bin/prlimit");
symlink("toolbox", "/system/bin/ps");
symlink("toolbox", "/system/bin/readlink");
symlink("toolbox", "/system/bin/renice");
symlink("toolbox", "/system/bin/restorecon");
symlink("toolbox", "/system/bin/rm");
symlink("toolbox", "/system/bin/rmdir");
symlink("toolbox", "/system/bin/rmmod");
symlink("toolbox", "/system/bin/route");
symlink("toolbox", "/system/bin/runcon");
symlink("toolbox", "/system/bin/sendevent");
symlink("toolbox", "/system/bin/setenforce");
symlink("toolbox", "/system/bin/setprop");
symlink("toolbox", "/system/bin/sleep");
symlink("toolbox", "/system/bin/sm");
symlink("toolbox", "/system/bin/start");
symlink("toolbox", "/system/bin/stop");
symlink("toolbox", "/system/bin/swapoff");
symlink("toolbox", "/system/bin/swapon");
symlink("toolbox", "/system/bin/sync");
symlink("toolbox", "/system/bin/top");
symlink("toolbox", "/system/bin/touch");
symlink("toolbox", "/system/bin/umount");
symlink("toolbox", "/system/bin/uptime");
symlink("toolbox", "/system/bin/vmstat");
symlink("toolbox", "/system/bin/watchprops");
symlink("toybox", "/system/bin/acpi");
symlink("toybox", "/system/bin/basename");
symlink("toybox", "/system/bin/blockdev");
symlink("toybox", "/system/bin/bzcat");
symlink("toybox", "/system/bin/cal");
symlink("toybox", "/system/bin/cat");
symlink("toybox", "/system/bin/chcon");
symlink("toybox", "/system/bin/chgrp");
symlink("toybox", "/system/bin/chmod");
symlink("toybox", "/system/bin/chown");
symlink("toybox", "/system/bin/chroot");
symlink("toybox", "/system/bin/cksum");
symlink("toybox", "/system/bin/clear");
symlink("toybox", "/system/bin/cmp");
symlink("toybox", "/system/bin/comm");
symlink("toybox", "/system/bin/cp");
symlink("toybox", "/system/bin/cpio");
symlink("toybox", "/system/bin/cut");
symlink("toybox", "/system/bin/date");
symlink("toybox", "/system/bin/dirname");
symlink("toybox", "/system/bin/dmesg");
symlink("toybox", "/system/bin/dos2unix");
symlink("toybox", "/system/bin/echo");
symlink("toybox", "/system/bin/env");
symlink("toybox", "/system/bin/expand");
symlink("toybox", "/system/bin/expr");
symlink("toybox", "/system/bin/fallocate");
symlink("toybox", "/system/bin/false");
symlink("toybox", "/system/bin/find");
symlink("toybox", "/system/bin/free");
symlink("toybox", "/system/bin/getenforce");
symlink("toybox", "/system/bin/getprop");
symlink("toybox", "/system/bin/groups");
symlink("toybox", "/system/bin/head");
symlink("toybox", "/system/bin/hostname");
symlink("toybox", "/system/bin/hwclock");
symlink("toybox", "/system/bin/id");
symlink("toybox", "/system/bin/ifconfig");
symlink("toybox", "/system/bin/inotifyd");
symlink("toybox", "/system/bin/insmod");
symlink("toybox", "/system/bin/kill");
symlink("toybox", "/system/bin/ln");
symlink("toybox", "/system/bin/load_policy");
symlink("toybox", "/system/bin/logname");
symlink("toybox", "/system/bin/losetup");
symlink("toybox", "/system/bin/lsmod");
symlink("toybox", "/system/bin/lsusb");
symlink("toybox", "/system/bin/md5sum");
symlink("toybox", "/system/bin/mkdir");
symlink("toybox", "/system/bin/mknod");
symlink("toybox", "/system/bin/mkswap");
symlink("toybox", "/system/bin/mktemp");
symlink("toybox", "/system/bin/modinfo");
symlink("toybox", "/system/bin/more");
symlink("toybox", "/system/bin/mountpoint");
symlink("toybox", "/system/bin/mv");
symlink("toybox", "/system/bin/netstat");
symlink("toybox", "/system/bin/nice");
symlink("toybox", "/system/bin/nl");
symlink("toybox", "/system/bin/nohup");
symlink("toybox", "/system/bin/od");
symlink("toybox", "/system/bin/paste");
symlink("toybox", "/system/bin/patch");
symlink("toybox", "/system/bin/pgrep");
symlink("toybox", "/system/bin/pidof");
symlink("toybox", "/system/bin/pkill");
symlink("toybox", "/system/bin/pmap");
symlink("toybox", "/system/bin/printenv");
symlink("toybox", "/system/bin/printf");
symlink("toybox", "/system/bin/pwd");
symlink("toybox", "/system/bin/readlink");
symlink("toybox", "/system/bin/realpath");
symlink("toybox", "/system/bin/restorecon");
symlink("toybox", "/system/bin/rm");
symlink("toybox", "/system/bin/rmdir");
symlink("toybox", "/system/bin/rmmod");
symlink("toybox", "/system/bin/route");
symlink("toybox", "/system/bin/runcon");
symlink("toybox", "/system/bin/sed");
symlink("toybox", "/system/bin/seq");
symlink("toybox", "/system/bin/setenforce");
symlink("toybox", "/system/bin/setprop");
symlink("toybox", "/system/bin/setsid");
symlink("toybox", "/system/bin/sha1sum");
symlink("toybox", "/system/bin/sleep");
symlink("toybox", "/system/bin/sort");
symlink("toybox", "/system/bin/split");
symlink("toybox", "/system/bin/stat");
symlink("toybox", "/system/bin/strings");
symlink("toybox", "/system/bin/swapoff");
symlink("toybox", "/system/bin/swapon");
symlink("toybox", "/system/bin/sync");
symlink("toybox", "/system/bin/sysctl");
symlink("toybox", "/system/bin/tac");
symlink("toybox", "/system/bin/tail");
symlink("toybox", "/system/bin/tar");
symlink("toybox", "/system/bin/taskset");
symlink("toybox", "/system/bin/tee");
symlink("toybox", "/system/bin/time");
symlink("toybox", "/system/bin/timeout");
symlink("toybox", "/system/bin/touch");
symlink("toybox", "/system/bin/tr");
symlink("toybox", "/system/bin/true");
symlink("toybox", "/system/bin/truncate");
symlink("toybox", "/system/bin/umount");
symlink("toybox", "/system/bin/uname");
symlink("toybox", "/system/bin/uniq");
symlink("toybox", "/system/bin/unix2dos");
symlink("toybox", "/system/bin/usleep");
symlink("toybox", "/system/bin/vmstat");
symlink("toybox", "/system/bin/wc");
symlink("toybox", "/system/bin/which");
symlink("toybox", "/system/bin/whoami");
symlink("toybox", "/system/bin/xargs");
symlink("toybox", "/system/bin/yes");
symlink("app_process32", "/system/bin/app_process");
symlink("dalvikvm32", "/system/bin/dalvikvm");
symlink("Roboto-Bold.ttf", "/system/fonts/DroidSans-Bold.ttf");
symlink("Roboto-Regular.ttf", "/system/fonts/DroidSans.ttf");
symlink("libGLESv2.so", "/system/lib/libGLESv3.so");
symlink("libOpenCL.so.1", "/system/vendor/lib/libOpenCL.so");
symlink("libOpenCL.so.1.1", "/system/vendor/lib/libOpenCL.so.1");
symlink("/vendor/lib/egl/libGLES_mali.so", "/system/vendor/lib/libOpenCL.so.1.1");
symlink("/system/lib/libbluetooth_jni.so", "/system/app/Bluetooth/lib/arm/libbluetooth_jni.so");
symlink("/system/lib/libatomcore.so", "/system/priv-app/OutOfFocusViewer_WQHD_K/lib/arm/libatomcore.so");
symlink("/system/lib/libatomjpeg.so", "/system/priv-app/OutOfFocusViewer_WQHD_K/lib/arm/libatomjpeg.so");
symlink("/system/lib/libsecipx.so", "/system/priv-app/OutOfFocusViewer_WQHD_K/lib/arm/libsecipx.so");
symlink("/system/lib/libSRIB_FocusShot.so", "/system/priv-app/OutOfFocusViewer_WQHD_K/lib/arm/libSRIB_FocusShot.so");
symlink("/system/lib/libSecFileClientUnit.so", "/system/priv-app/SamsungLinkPlatform/lib/arm/libSecFileClientUnit.so");
symlink("/system/lib/libSLPF_scone_proxy_mm.so", "/system/priv-app/SamsungLinkPlatform/lib/arm/libSLPF_scone_proxy_mm.so");
symlink("/system/lib/libSLPF_scone_proxy.so", "/system/priv-app/SamsungLinkPlatform/lib/arm/libSLPF_scone_proxy.so");
symlink("/system/lib/libSLPF_scone_stub_mm.so", "/system/priv-app/SamsungLinkPlatform/lib/arm/libSLPF_scone_stub_mm.so");
symlink("/system/lib/libSLPF_scone_stub.so", "/system/priv-app/SamsungLinkPlatform/lib/arm/libSLPF_scone_stub.so");
symlink("/system/lib/libSLPF_security.so", "/system/priv-app/SamsungLinkPlatform/lib/arm/libSLPF_security.so");
symlink("/system/lib/libSLPF_transcoder_jni_kk.so", "/system/priv-app/SamsungLinkPlatform/lib/arm/libSLPF_transcoder_jni_kk.so");
symlink("/system/lib/libSLPF_transcoder_jni_ll.so", "/system/priv-app/SamsungLinkPlatform/lib/arm/libSLPF_transcoder_jni_ll.so");
symlink("/system/lib/libnfc_nci_jni.so", "/system/app/NfcNci/lib/arm/libnfc_nci_jni.so");
symlink("/system/lib/libjni_pacprocessor.so", "/system/app/PacProcessor/lib/arm/libjni_pacprocessor.so");
symlink("/system/lib/libcommonpawrapper.so", "/system/app/RootPA/lib/arm/libcommonpawrapper.so");
symlink("/system/lib/libapa_jni.so", "/system/app/SapaMonitor/lib/arm/libapa_jni.so");
symlink("/system/lib/libdefcontainer_jni.so", "/system/priv-app/DefaultContainerService/lib/arm/libdefcontainer_jni.so");
symlink("/system/lib/libswiftkeysdk-java.so", "/system/app/SamsungIME/lib/arm/libswiftkeysdk-java.so");
symlink("/system/lib/modules/qca_cld/proprietary_qca_cld_wlan.ko", "/system/lib/modules/wlan.ko");
symlink("/system/bin/app_process32", "/system/bin/app_process");

#--PERMISSIONS
set_progress(0.70);
ui_print("-- Setting & fixing permissions");
set_metadata_recursive("/system", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/bin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/ppp", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0555, "capabilities", 0x0, "selabel", "u:object_r:ppp_system_file:s0");
set_metadata_recursive("/system/etc/init.d", "uid", 2000, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/dhcpcd", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:dhcp_system_file:s0");
set_metadata_recursive("/system/etc/firmware", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/ppp", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0555, "capabilities", 0x0, "selabel", "u:object_r:ppp_system_file:s0");
set_metadata_recursive("/system/lib", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_library_file:s0");
set_metadata_recursive("/system/lib64", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_library_file:s0");
set_metadata_recursive("/system/vendor", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/lib/mediadrm", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/xbin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/su.d", "uid", 2000, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/su.d", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/cronfs", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/cronclean", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/cronsql", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/init.d", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/androidshmservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:androidshmservice_exec:s0");
set_metadata("/system/bin/apaservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:apaservice_exec:s0");
set_metadata("/system/bin/app_process32", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
set_metadata("/system/bin/app_process", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
set_metadata("/system/bin/oatdump", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/argosd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:argosd_exec:s0");
set_metadata("/system/bin/at_distributor", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:at_distributor_exec:s0");
set_metadata("/system/bin/blkid", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:blkid_exec:s0");
set_metadata("/system/bin/bootanimation", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bootanim_exec:s0");
set_metadata("/system/bin/bootchecker", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bootchecker_exec:s0");
set_metadata("/system/bin/bugreport", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:bugreport_exec:s0");
set_metadata("/system/bin/charon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:charon_exec:s0");
set_metadata("/system/bin/clatd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:clatd_exec:s0");
set_metadata("/system/bin/connfwexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:connfwexe_exec:s0");
set_metadata("/system/bin/cs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:cs_exec:s0");
set_metadata("/system/bin/ddexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ddexe_exec:s0");
set_metadata("/system/bin/debuggerd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:debuggerd_exec:s0");
set_metadata("/system/bin/dex2oat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dex2oat_exec:s0");
set_metadata("/system/bin/dhcpcd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dhcp_exec:s0");
set_metadata("/system/bin/diagexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:diagexe_exec:s0");
set_metadata("/system/bin/dnsmasq", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dnsmasq_exec:s0");
set_metadata("/system/bin/drmserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drmserver_exec:s0");
set_metadata("/system/bin/dumpstate", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dumpstate_exec:s0");
set_metadata("/system/bin/dumpsys", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dumpsys_exec:s0");
set_metadata("/system/bin/edmaudit", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:edmaudit_exec:s0");
set_metadata("/system/bin/e2fsck", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/epmlogd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:epmlogd_exec:s0");
set_metadata("/system/bin/exyrngd", "uid", 0, "gid", 2000, "mode", 0700, "capabilities", 0x0, "selabel", "u:object_r:exyrngd_exec:s0");
set_metadata("/system/bin/fsck.exfat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/fsck.f2fs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/fsck_msdos", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/gatekeeperd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:gatekeeperd_exec:s0");
set_metadata("/system/bin/gpsd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:gpsd_exec:s0");
set_metadata("/system/bin/hostapd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hostapd_exec:s0");
set_metadata("/system/bin/icd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:icd_exec:s0");
set_metadata("/system/bin/installd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:installd_exec:s0");
set_metadata("/system/bin/install-recovery.sh", "uid", 0, "gid", 0, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:install_recovery_exec:s0");
set_metadata("/system/bin/insthk", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:insthk_exec:s0");
set_metadata("/system/bin/ip6tables", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/jackservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:jackservice_exec:s0");
set_metadata("/system/bin/IPSecService", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:IPSecService_exec:s0");
set_metadata("/system/bin/keystore", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:keystore_exec:s0");
set_metadata("/system/bin/lmkd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:lmkd_exec:s0");
set_metadata("/system/bin/lpm", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:lpm_exec:s0");
set_metadata("/system/bin/logcat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:logcat_exec:s0");
set_metadata("/system/bin/logd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:logd_exec:s0");
set_metadata("/system/bin/logwrapper", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/macloader", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:macloader_exec:s0");
set_metadata("/system/bin/make_ext4fs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/mcDriverDaemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mobicoredaemon_exec:s0");
set_metadata("/system/bin/mdnsd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mdnsd_exec:s0");
set_metadata("/system/bin/mediaserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mediaserver_exec:s0");
set_metadata("/system/bin/mfgloader", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mfgloader_exec:s0");
set_metadata("/system/bin/mkfs.exfat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:fsck_exec:s0");
set_metadata("/system/bin/mtpd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mtp_exec:s0");
set_metadata("/system/bin/ndc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/netd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:netd_exec:s0");
set_metadata("/system/bin/npsmobex", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mobexdaemon_exec:s0");
set_metadata("/system/bin/olsrd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:olsrd_exec:s0");
set_metadata("/system/bin/otp_server", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:otp_server_exec:s0");
set_metadata("/system/bin/patchoat", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dex2oat_exec:s0");
set_metadata("/system/bin/ping", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/pppd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ppp_exec:s0");
set_metadata("/system/bin/prepare_param.sh", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:prepare_param_sh_file:s0");
set_metadata("/system/bin/racoon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:racoon_exec:s0");
set_metadata("/system/bin/resetreason", "uid", 1000, "gid", 1000, "mode", 0710, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/rild", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:rild_exec:s0");
set_metadata("/system/bin/run-as", "uid", 0, "gid", 2000, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:runas_exec:s0");
set_metadata("/system/bin/samsungpowersoundplay", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:samsungpowersoundplay_exec:s0");
set_metadata("/system/bin/scs", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:scs_exec:s0");
set_metadata("/system/bin/sdcard", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdcardd_exec:s0");
set_metadata("/system/bin/sdp_cryptod", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdp_cryptod_exec:s0");
set_metadata("/system/bin/secure_storage_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:secure_storage_exec:s0");
set_metadata("/system/bin/sensorservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sensorhubservice_exec:s0");
set_metadata("/system/bin/servicemanager", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:servicemanager_exec:s0");
set_metadata("/system/bin/sgdisk", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sgdisk_exec:s0");
set_metadata("/system/bin/sh", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:shell_exec:s0");
set_metadata("/system/bin/smdexe", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:smdexe_exec:s0");
set_metadata("/system/bin/sdp_cryptod", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdp_cryptod_exec:s0");
set_metadata("/system/bin/ss_conn_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ss_conn_daemon_exec:s0");
set_metadata("/system/bin/ss_kbservice_daemon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ss_kbservice_daemon_exec:s0");
set_metadata("/system/bin/surfaceflinger", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:surfaceflinger_exec:s0");
set_metadata("/system/bin/tc", "uid", 0, "gid", 1000, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/tima_dump_log", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tima_dump_exec:s0");
set_metadata("/system/bin/tlc_server", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tlc_server_exec:s0");
set_metadata("/system/bin/tzdatacheck", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:tzdatacheck_exec:s0");
set_metadata("/system/bin/uncrypt", "uid", 0, "gid", 0, "mode", 0750, "capabilities", 0x0, "selabel", "u:object_r:uncrypt_exec:s0");
set_metadata("/system/bin/vdc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vdc_exec:s0");
set_metadata("/system/bin/vold", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vold_exec:s0");
set_metadata("/system/bin/wlandutservice", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wlandutservice_exec:s0");
set_metadata("/system/bin/wpa_supplicant", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wpa_exec:s0");
set_metadata("/system/etc", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth/auto_pair_devlist.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth/bt_did.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/bluetooth/bt_stack.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/event-log-tags", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:event_log_tags_file:s0");
set_metadata("/system/etc/init.sec.boot.sh", "uid", 0, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:sec-sh_exec:s0");
set_metadata("/system/etc/permissions", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/security", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/security/cacerts", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/dhcpcd/dhcpcd-hooks", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/dhcpcd/dhcpcd-run-hooks", "uid", 1014, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/init.goldfish.sh", "uid", 0, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/security/.drm", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drm_security_system_file:s0");
set_metadata("/system/lib/drm", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drm_lib_system_file:s0");
set_metadata("/system/toolbox", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/egl", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/mediadrm/libdrmclearkeyplugin.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib/mediadrm/libwvdrmengine.so", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/media", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/dexdump", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/recovery-from-boot.p", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0);

#--CUSTOMIZE
set_progress(0.75);
ui_print("-- Customize System");
	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.1") == "0"
	then
		delete_recursive("/system/app/AccuweatherPhone2015");
		delete_recursive("/system/app/WeatherDaemon2015");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.2") == "0"
	then
		delete_recursive("/system/app/AllshareFileShare");
		delete_recursive("/system/app/AllshareFileShareClient");
		delete_recursive("/system/app/AllshareFileShareServer");
		delete_recursive("/system/app/AllshareMediaShare");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.3") == "0"
	then
		delete_recursive("/system/app/AntHalService");
		delete_recursive("/system/app/ANTPlusPlugins");
		delete_recursive("/system/app/ANTPlusTest");
		delete_recursive("/system/app/ANTRadioService");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.4") == "0"
	then
		delete_recursive("/system/app/ClockPackage_M_Osup");
		delete_recursive("/system/app/DigitalClock_MOSUP");
		delete_recursive("/system/app/DigitalClockEasy_MOSUP");
		delete_recursive("/system/app/DualClockDigital_MOSUP");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.5") == "0"
	then
		delete_recursive("/system/priv-app/HybridRadio2016_M");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.6") == "0"
	then
		delete_recursive("/system/priv-app/MagicShot_FHD_A7");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.7") == "0"
	then
		delete_recursive("/system/priv-app/PhotoStudio_WQHD_Zero");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.8") == "0"
	then
		delete_recursive("/system/app/QuickConnect_40");
		delete_recursive("/system/app/QuickConnectBridge");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.9") == "0"
	then
		delete_recursive("/system/priv-app/SamsungAccount_Hero");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.10") == "0"
	then
		delete_recursive("/system/priv-app/SamsungBilling");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.11") == "0"
	then
		delete_recursive("/system/priv-app/SFinder_v4");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.12") == "0"
	then
		delete_recursive("/system/app/GearManagerStub");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.13") == "0"
	then
		delete_recursive("/system/priv-app/HealthService");
		delete_recursive("/system/priv-app/SHealth4");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.14") == "0"
	then
		delete_recursive("/system/app/MobilePrintSvc_Samsung");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.15") == "0"
	then
		delete_recursive("/system/priv-app/SMusic");
		delete_recursive("/system/priv-app/SMusicPicker");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.16") == "0"
	then
		delete_recursive("/system/app/OneDrive_Samsung_v2");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.17") == "0"
	then
		delete_recursive("/system/priv-app/SPPPushClient_Prod");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.18") == "0"
	then
		delete_recursive("/system/app/SamsungTTS");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.19") == "0"
	then
		delete_recursive("/system/priv-app/SPDClient");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.20") == "0"
	then
		delete_recursive("/system/priv-app/SmartManager_v3");
		delete_recursive("/system/priv-app/SmartManager_v3_DeviceSecurity");
		delete_recursive("/system/priv-app/SmartManagerProvider");
		delete_recursive("/system/priv-app/SmartManagerSDK");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.21") == "0"
	then
		delete_recursive("/system/priv-app/SVoice_1.0");
		delete_recursive("/system/priv-app/SVoiceLang_EnglishPack_GB_1.0");
		delete_recursive("/system/priv-app/SVoiceLang_EnglishPack_US_1.0");
		delete_recursive("/system/priv-app/SVoiceLang_FrenchPack_1.0");
		delete_recursive("/system/priv-app/SVoiceLang_GermanPack_DE_1.0");
		delete_recursive("/system/priv-app/SVoiceLang_ItalianPack_IT_1.0");
		delete_recursive("/system/priv-app/SVoiceLang_RussianPack_RU_1.0");
		delete_recursive("/system/priv-app/SVoiceLang_SpanishPack_ES_1.0");
		delete_recursive("/system/priv-app/SVoicePLM_1.0");
	endif;

	if
		file_getprop("/tmp/aroma-data/sm_apps.prop","item.1.22") == "0"
	then
		delete_recursive("/system/priv-app/ZVideo");
	endif;
	
#--VIPER

	if
		file_getprop("/tmp/aroma/optsu.prop", "selected.2") == "1"
	then
		ui_print("-- Installing Viper ARISE");
		package_extract_dir("tools/audio/ViperA", "/tmp/ARISE");
		run_program("/sbin/busybox", "unzip", "/tmp/ARISE/ARISE.zip", "META-INF/com/google/android/*", "-d", "/tmp/ARISE");
		run_program("/sbin/busybox", "sh", "/tmp/ARISE/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/ARISE/ARISE.zip");
		package_extract_dir("tools/audio/sdcard/", "/sdcard/tmp");
		run_program("/sbin/busybox", "unzip", "/sdcard/tmp/ViPER4Android.zip", "-n", "-d", "/data/media/legacy/");
		set_metadata("/sdcard/tmp/viper.sh", "uid", 0, "gid", 2000, "mode", 0777, "capabilities", 0x0, "selabel", "u:object_r:viper_sh_file:s0");
		run_program("/sdcard/tmp/viper.sh");
	endif;

#--XPOSED

set_progress(0.85);
	if
		file_getprop("/tmp/aroma/optsu.prop", "selected.3") == "1"
	then
		ui_print("-- Installing Xposed framework");
		package_extract_dir("xposed", "/tmp/xposed");
		set_metadata("/tmp/install_xposed.sh", "uid", 0, "gid", 0, "mode", 0777);
		run_program("/sbin/busybox", "unzip", "/tmp/xposed/xposed.zip", "*", "-d", "/tmp/xposed");
		set_metadata("/tmp/xposed/META-INF/com/google/android/flash-script.sh", "uid", 0, "gid", 0, "mode", 0777);
		run_program("/tmp/install_xposed.sh");
		package_extract_dir("tools/xposed/app", "/data/app");
		set_metadata_recursive("/data/app/de.robv.android.xposed.installer-1", "uid", 1000, "gid", 1000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:apk_data_file:s0");
	endif;

#--XPOSED modules

set_progress(0.90);

	if
		file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.1") == "1"
    then
      ui_print("@  Installing Amplify");
	  package_extract_dir("tools/xposed/modules/com.ryansteckler.nlpunbounce-1", "/data/app/com.ryansteckler.nlpunbounce-1");
    endif;

	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.2") == "1"
    then
      ui_print("@  Force Doze");
	  package_extract_dir("tools/xposed/modules/com.suyashsrijan.forcedoze-1", "/data/app/com.suyashsrijan.forcedoze-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.3") == "1"
    then
      ui_print("@  Greenify");
	  package_extract_dir("tools/xposed/modules/com.oasisfeng.greenify-1", "/data/app/com.oasisfeng.greenify-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.4") == "1"
    then
      ui_print("@  Stay Awake");
	  package_extract_dir("tools/xposed/modules/io.kuenzler.android.stayawake-1", "/data/app/io.kuenzler.android.stayawake-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.5") == "1"
    then
      ui_print("@  Marshmallow SD Fix");
	  package_extract_dir("tools/xposed/modules/com.balamurugan.marshmallowsdfix-1", "/data/app/com.balamurugan.marshmallowsdfix-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.6") == "1"
    then
      ui_print("@  RootCloak");
	  package_extract_dir("tools/xposed/modules/com.devadvance.rootcloak2-1", "/data/app/com.devadvance.rootcloak2-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.7") == "1"
    then
      ui_print("@  Xhangouts");
	  	  package_extract_dir("tools/xposed/modules/com.versobit.kmark.xhangouts-1", "/data/app/com.versobit.kmark.xhangouts-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.8") == "1"
    then
      ui_print("@  XInternal SD");
	  package_extract_dir("tools/xposed/modules/com.pyler.xinternalsd-1", "/data/app/com.pyler.xinternalsd-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.9") == "1"
    then
      ui_print("@  Wanam Xtouchwiz");
	  package_extract_dir("tools/xposed/modules/ma.wanam.xtouchwiz-1", "/data/app/ma.wanam.xtouchwiz-1");
    endif;

	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.10") == "1"
    then
      ui_print("@  Power Nap");
	  package_extract_dir("tools/xposed/modules/net.jzhang.powernap-1", "/data/app/net.jzhang.powernap-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.11") == "1"
    then
      ui_print("@  Data Usage");
	  package_extract_dir("tools/xposed/modules/io.github.francoiscampbell.xposeddatausage-1", "/data/app/io.github.francoiscampbell.xposeddatausage-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.12") == "1"
    then
      ui_print("@  SIM Editor");
	  package_extract_dir("tools/xposed/modules/com.gnufabio.simeditor-1", "/data/app/com.gnufabio.simeditor-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.13") == "1"
    then
      ui_print("@  Xposed Tweaks");
	  package_extract_dir("tools/xposed/modules/com.smartmadsoft.xposed.aio-1", "/data/app/com.smartmadsoft.xposed.aio-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.14") == "1"
    then
      ui_print("@  Advanced Power Menu +");
	  package_extract_dir("tools/xposed/modules/hk.kennethso168.xposed.apmplus-1", "/data/app/hk.kennethso168.xposed.apmplus-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.15") == "1"
    then
      ui_print("@  SU Hide");
	  package_extract_dir("tools/xposed/modules/com.sudocode.sudohide-1", "/data/app/com.sudocode.sudohide-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.16") == "1"
    then
      ui_print("@  No Device Check");
	  package_extract_dir("tools/xposed/modules/com.pyler.nodevicecheck-1", "/data/app/com.pyler.nodevicecheck-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.17") == "1"
    then
      ui_print("@  Serial Number Changer");
	  package_extract_dir("tools/xposed/modules/com.intplus.idchanger-1", "/data/app/com.intplus.idchanger-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.18") == "1"
    then
      ui_print("@  AF Wall +");
	  package_extract_dir("tools/xposed/modules/dev.ukanth.ufirewall-1", "/data/app/dev.ukanth.ufirewall-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.19") == "1"
    then
      ui_print("@  GravityBox");
	  package_extract_dir("tools/xposed/modules/com.ceco.marshmallow.gravitybox-1", "/data/app/com.ceco.marshmallow.gravitybox-1");
    endif;
	
	if 
	  file_getprop("/tmp/aroma-data/xposedmodules.prop","item.1.20") == "1"
    then
      ui_print("@  No Wakelock");
	  package_extract_dir("tools/xposed/modules/com.linangran.nowakelock-1", "/data/app/com.linangran.nowakelock-1");
    endif;

#--ROOT
ui_print("-- Rooting");
set_progress(0.95);
package_extract_dir("tools/supersu", "/tmp/supersu");

	if
		file_getprop("/tmp/aroma/optsu.prop", "selected.1") == "1"
	then
		run_program("/sbin/busybox", "unzip", "/tmp/supersu/supersu.zip", "META-INF/com/google/android/*", "-d", "/tmp/supersu");
		run_program("/sbin/busybox", "sh", "/tmp/supersu/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/supersu/supersu.zip");
	endif;
	if
		file_getprop("/tmp/aroma/optsu.prop", "selected.1") == "2"
	then
		run_program("/sbin/busybox", "unzip", "/tmp/supersu/supersulast.zip", "META-INF/com/google/android/*", "-d", "/tmp/supersu");
		run_program("/sbin/busybox", "sh", "/tmp/supersu/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/supersu/supersulast.zip");
	endif;
	if
		file_getprop("/tmp/aroma/supersu.prop", "selected.1") == "2"
	then
		run_program("/sbin/busybox", "unzip", "/tmp/supersu/magisk.zip", "META-INF/com/google/android/*", "-d", "/tmp/supersu");
		run_program("/sbin/busybox", "sh", "/tmp/supersu/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/supersu/magisk.zip");
	endif;
	if
		file_getprop("/tmp/aroma/supersu.prop", "selected.1") == "3"
	then
		ui_print("-- Root not installed");
	endif;

#--BUSYBOX
	if
		file_getprop("/tmp/aroma/supersu.prop", "selected.1") == "1"
	then
		ui_print("-- Installing Busybox");
		package_extract_dir("busybox", "/tmp/busybox");
		run_program("/sbin/busybox", "unzip", "/tmp/busybox/busybox.zip", "META-INF/com/google/android/*", "-d", "/tmp/busybox");
		run_program("/sbin/busybox", "sh", "/tmp/busybox/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/busybox/busybox.zip");
	endif;
	
	if
		file_getprop("/tmp/aroma/supersu.prop", "selected.1") == "3"
	then
		ui_print("-- Installing Busybox");
		package_extract_dir("busybox", "/tmp/busybox");
		run_program("/sbin/busybox", "unzip", "/tmp/busybox/busybox.zip", "META-INF/com/google/android/*", "-d", "/tmp/busybox");
		run_program("/sbin/busybox", "sh", "/tmp/busybox/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/busybox/busybox.zip");
	endif;

#--FINISH
ui_print("-- Finishing installation");
set_progress(0.99);
ifelse(is_mounted("/system"), unmount("/system"));
ifelse(is_mounted("/system") == "/system", unmount("/system"));
ifelse(is_mounted("/cache") == "/cache", unmount("/cache"));
ifelse(is_mounted("/data") == "/data", unmount("/data"));
delete_recursive("/sdcard/tmp/");
delete_recursive("/tmp/");
ui_print("Installation completed successfully");
